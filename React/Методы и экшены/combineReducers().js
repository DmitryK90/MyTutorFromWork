combineReducers() позволяет объединить несколько редьюсеров в один.

Если логика обновления компонентов довольно сложна и\или необходимо обрабатывать большое количество
различных типов событий, то корневой reducer может стать слишком громоздким. Лучшим решением будет
разбить его на несколько отдельных редьюсеров каждый из которых отвечает за обработку только одного
типа событий и обновления определённого поля.

Внимание!
Когда вы разбиваете базовый редьюсер на несколько, то название каждого из них должно соответствовать
полю которое он обновляет в store.
К примеру если редьюсер обновляет поле номер один, то он может выглядеть так:

function value_1(state, action) {
    switch(action.type) {
        case ACTION_1: return action.value_1;

        default: return state;
    }
}

export default value_1;

Название редьюсера (value_1) показывает какое свойство он будет обновлять в store. Если переименуете
его в value_2 то он станет обновлять value_2. Поэтому учтите это!
Когда используется единый редьюсер мы показываем какое поле хотим обновить:

 case ACTION_1: return { value_1: action.value_1 };

Но когда вы разделили ваши редьюсеры вам нужно просто вернуть новое значение:

case ACTION_1: return action.value_1;

Поскольку здесь не требуется указывать которое из полей обновляет редьюсер ибо его название и есть
поле которое он обновляет.